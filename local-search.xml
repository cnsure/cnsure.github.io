<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Redis的RDB与AOF</title>
    <link href="/2021/01/23/Redis%E7%9A%84RDB%E4%B8%8EAOF/"/>
    <url>/2021/01/23/Redis%E7%9A%84RDB%E4%B8%8EAOF/</url>
    
    <content type="html"><![CDATA[<h1 id="一-RDB和AOF两种持久化机制的介绍"><a href="#一-RDB和AOF两种持久化机制的介绍" class="headerlink" title="一 RDB和AOF两种持久化机制的介绍"></a>一 RDB和AOF两种持久化机制的介绍</h1><ol><li>RDB持久化机制，对redis中的数据执行周期性的持久化</li><li>AOF机制对每条写入命令作为日志，以append-only的模式写入一个日志文件中，在redis重启的时候，可以通过回放AOF日志中的写入指令来重新构建整个数据集</li><li>如果我们想要redis仅仅作为纯内存的缓存来用，那么可以禁止RDB和AOF所有的持久化机制</li><li>通过RDB或AOF，都可以将redis内存中的数据给持久化到磁盘上面来，然后可以将这些数据备份到别的地方去，比如说阿里云，云服务，如果redis挂了，服务器上的内存和磁盘上的数据都丢了，可以从云服务上拷贝回来之前的数据，放到指定的目录中，然后重新启动redis，redis就会自动根据持久化数据文件中的数据，去恢复内存中的数据，继续对外提供服务</li><li><code>如果同时使用RDB和AOF两种持久化机制，那么在redis重启的时候，会使用AOF来重新构建数据，因为AOF中的数据更加完整</code></li></ol><h1 id="二-RDB持久化机制"><a href="#二-RDB持久化机制" class="headerlink" title="二 RDB持久化机制"></a>二 RDB持久化机制</h1><h2 id="1-优点"><a href="#1-优点" class="headerlink" title="1. 优点"></a>1. 优点</h2><p>（1）RDB会生成多个数据文件，每个数据文件都代表了某一个时刻中redis的数据，这种多个数据文件的方式，非常适合做冷备，可以将这种完整的数据文件发送到一些远程的安全存储上去，比如说Amazon的S3云服务上去，在国内可以是阿里云的ODPS分布式存储上，以预定好的备份策略来定期备份redis中的数据</p><p>RDB也可以做冷备，生成多个文件，每个文件都代表了某一个时刻的完整的数据快照<br>AOF也可以做冷备，只有一个文件，但是你可以，每隔一定时间，去copy一份这个文件出来</p><p>RDB做冷备，优势在哪儿呢？由redis去控制固定时长生成快照文件的事情，比较方便; AOF，还需要自己写一些脚本去做这个事情，各种定时<br>RDB数据做冷备，在最坏的情况下，提供数据恢复的时候，速度比AOF快</p><p>（2）RDB对redis对外提供的读写服务，影响非常小，可以让redis保持高性能，因为redis主进程只需要fork一个子进程，让子进程执行磁盘IO操作来进行RDB持久化即可</p><p>RDB，每次写，都是直接写redis内存，只是在一定的时候，才会将数据写入磁盘中<br>AOF，每次都是要写文件的，虽然可以快速写入os cache中，但是还是有一定的时间开销的,速度肯定比RDB略慢一些</p><p>（3）相对于AOF持久化机制来说，直接基于RDB数据文件来重启和恢复redis进程，更加快速</p><p>AOF，存放的指令日志，做数据恢复的时候，其实是要回放和执行所有的指令日志，来恢复出来内存中的所有数据的<br>RDB，就是一份数据文件，恢复的时候，直接加载到内存中即可</p><p>结合上述优点，RDB特别适合做冷备份，冷备</p><h2 id="2-缺点"><a href="#2-缺点" class="headerlink" title="2. 缺点"></a>2. 缺点</h2><p>（1）如果想要在redis故障时，尽可能少的丢失数据，那么RDB没有AOF好。一般来说，RDB数据快照文件，都是每隔5分钟，或者更长时间生成一次，这个时候就得接受一旦redis进程宕机，那么会丢失最近5分钟的数据</p><p>这个问题，也是rdb最大的缺点，就是不适合做第一优先的恢复方案，如果你依赖RDB做第一优先恢复方案，会导致数据丢失的比较多</p><p>（2）RDB每次在fork子进程来执行RDB快照数据文件生成的时候，如果数据文件特别大，可能会导致对客户端提供的服务暂停数毫秒，或者甚至数秒</p><p>一般不要让RDB的间隔太长，否则每次生成的RDB文件太大了，对redis本身的性能可能会有影响的</p><h2 id="3-工作流程"><a href="#3-工作流程" class="headerlink" title="3. 工作流程"></a>3. 工作流程</h2><p>（1）redis根据配置自己尝试去生成rdb快照文件<br>（2）fork一个子进程出来<br>（3）子进程尝试将数据dump到临时的rdb快照文件中<br>（4）完成rdb快照文件的生成之后，就替换之前的旧的快照文件</p><p><code>通过redis-cli SHUTDOWN这种方式去停掉redis，其实是一种安全退出的模式，redis在退出的时候会将内存中的数据立即生成一份完整的rdb快照</code></p><h1 id="三-AOF持久化机制"><a href="#三-AOF持久化机制" class="headerlink" title="三 AOF持久化机制"></a>三 AOF持久化机制</h1><h2 id="1-优点-1"><a href="#1-优点-1" class="headerlink" title="1.优点"></a>1.优点</h2><p>（1）AOF可以更好的保护数据不丢失，一般AOF会每隔1秒，通过一个后台线程执行一次fsync操作，最多丢失1秒钟的数据，每隔1秒，就执行一次fsync操作，保证os cache中的数据写入磁盘中，redis进程挂了，最多丢掉1秒钟的数据</p><p>（2）AOF日志文件以append-only模式写入，所以没有任何磁盘寻址的开销，写入性能非常高，而且文件不容易破损，即使文件尾部破损，也很容易修复</p><p>（3）AOF日志文件即使过大的时候，出现后台重写操作，也不会影响客户端的读写。因为在rewrite log的时候，会对其中的指导进行压缩，创建出一份需要恢复数据的最小日志出来。再创建新日志文件的时候，老的日志文件还是照常写入。当新的merge后的日志文件ready的时候，再交换新老日志文件即可。</p><p>（4）AOF日志文件的命令通过非常可读的方式进行记录，这个特性非常适合做灾难性的误删除的紧急恢复。比如某人不小心用flushall命令清空了所有数据，只要这个时候后台rewrite还没有发生，那么就可以立即拷贝AOF文件，将最后一条flushall命令给删了，然后再将该AOF文件放回去，就可以通过恢复机制，自动恢复所有数据</p><h2 id="2-缺点-1"><a href="#2-缺点-1" class="headerlink" title="2. 缺点"></a>2. 缺点</h2><p>（1）对于同一份数据来说，AOF日志文件通常比RDB数据快照文件更大</p><p>（2）AOF开启后，支持的写QPS会比RDB支持的写QPS低，因为AOF一般会配置成每秒fsync一次日志文件，当然，每秒一次fsync，性能也还是很高的</p><p>如果你要保证一条数据都不丢，也是可以的，AOF的fsync设置成没写入一条数据，fsync一次，那就完蛋了，redis的QPS大降</p><p>（3）以前AOF发生过bug，就是通过AOF记录的日志，进行数据恢复的时候，没有恢复一模一样的数据出来。所以说，类似AOF这种较为复杂的基于命令日志/merge/回放的方式，比基于RDB每次持久化一份完整的数据快照文件的方式，更加脆弱一些，容易有bug。不过AOF就是为了避免rewrite过程导致的bug，因此每次rewrite并不是基于旧的指令日志进行merge的，而是基于当时内存中的数据进行指令的重新构建，这样健壮性会好很多。</p><p>（4）唯一的比较大的缺点，其实就是做数据恢复的时候，会比较慢，还有做冷备，定期的备份，不太方便，可能要自己手写复杂的脚本去做，做冷备不太合适</p><h1 id="四-RDB与AOF到底该如何选择"><a href="#四-RDB与AOF到底该如何选择" class="headerlink" title="四 RDB与AOF到底该如何选择"></a>四 RDB与AOF到底该如何选择</h1><p>（1）不要仅仅使用RDB，因为那样会导致你丢失很多数据</p><p>（2）也不要仅仅使用AOF，因为那样有两个问题，第一，你通过AOF做冷备，没有RDB做冷备，来的恢复速度更快; 第二，RDB每次简单粗暴生成数据快照，更加健壮，可以避免AOF这种复杂的备份和恢复机制的bug</p><p>（3）综合使用AOF和RDB两种持久化机制，用AOF来保证数据不丢失，作为数据恢复的第一选择; 用RDB来做不同程度的冷备，在AOF文件都丢失或损坏不可用的时候，还可以使用RDB来进行快速的数据恢复</p>]]></content>
    
    
    <categories>
      
      <category>缓存</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Redis的安装以及生产环境的部署</title>
    <link href="/2021/01/23/Redis%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <url>/2021/01/23/Redis%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E7%9A%84%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="一-环境准备"><a href="#一-环境准备" class="headerlink" title="一 环境准备"></a>一 环境准备</h1><h2 id="1-首先安装虚拟机及管理工具"><a href="#1-首先安装虚拟机及管理工具" class="headerlink" title="1. 首先安装虚拟机及管理工具"></a>1. 首先安装虚拟机及管理工具</h2><p>参考<a href="/2020/10/02/Vagrant%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AE%A1%E7%90%86/" title="Vagrant虚拟机管理">Vagrant虚拟机管理</a>，当然也可以使用自己的虚拟机直接操作，这样的话可以忽略1、2步</p><h2 id="2-管理虚拟机"><a href="#2-管理虚拟机" class="headerlink" title="2. 管理虚拟机"></a>2. 管理虚拟机</h2><p>创建如下的目录结构，并配置Vagrantfile</p><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/blog/dir.png" alt="目录结构"></p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># -*- mode: ruby -*-</span><br><span class="hljs-comment"># vi: set ft=ruby :</span><br><br><span class="hljs-comment"># 只列出了必要的配置，需要分别配置network、hostname 完成4个虚拟机的配置</span><br>Vagrant.configure(<span class="hljs-string">&quot;2&quot;</span>) <span class="hljs-keyword">do</span> |<span class="hljs-params">config</span>|<br>  config.vm.box = <span class="hljs-string">&quot;centos/7&quot;</span><br>  config.vm.hostname = <span class="hljs-string">&quot;vagrant01&quot;</span><br>  config.vm.network <span class="hljs-string">&quot;private_network&quot;</span>, <span class="hljs-symbol">ip:</span> <span class="hljs-string">&quot;192.168.56.101&quot;</span><br>  config.vm.synced_folder <span class="hljs-string">&quot;../data&quot;</span>, <span class="hljs-string">&quot;/vagrant_data&quot;</span><br>  config.vm.provider <span class="hljs-string">&quot;virtualbox&quot;</span> <span class="hljs-keyword">do</span> |<span class="hljs-params">vb</span>|<br>    <span class="hljs-comment"># Display the VirtualBox GUI when booting the machine</span><br>    <span class="hljs-comment"># vb.gui = true</span><br>    vb.name = <span class="hljs-string">&quot;vagrant01&quot;</span><br>    <span class="hljs-comment"># Customize the amount of memory on the VM:</span><br>    vb.memory = <span class="hljs-string">&quot;1024&quot;</span><br>  <span class="hljs-keyword">end</span><br><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure><h2 id="3-配置host文件"><a href="#3-配置host文件" class="headerlink" title="3. 配置host文件"></a>3. 配置host文件</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">192.168.56.101 vagrant01<br>192.168.56.102 vagrant02<br>192.168.56.103 vagrant03<br>192.168.56.104 vagrant04<br></code></pre></td></tr></table></figure><h2 id="4-配置服务间的免密登录"><a href="#4-配置服务间的免密登录" class="headerlink" title="4. 配置服务间的免密登录"></a>4. 配置服务间的免密登录</h2><p>本配置都是基于root用户</p><ol><li>生成秘钥<code>ssh-keygen -t rsa</code>然后一路回车</li><li>会在/root/.ssh目录下生成秘钥文件</li><li><code>cp id_rsa.pub authorized_keys</code>将公钥复制为authorized_keys文件，此时使用ssh连接本机就不需要输入密码了</li><li>使用<code>ssh-copy-id -i hostname</code>命令将本机的公钥拷贝到指定机器的authorized_keys文件中,这样其他机器连接本机就不需要密码了</li></ol><blockquote><p>注意使用vagrant用户时，默认有authorized_keys文件，这个vagrant ssh时需要的，所以不要直接覆盖（导致vagrant ssh 连接不上），可以 <code>cat id_rsa.pub &gt;&gt; authorized_keys</code>追加</p></blockquote><h2 id="5-安装perl"><a href="#5-安装perl" class="headerlink" title="5. 安装perl"></a>5. 安装perl</h2><p>使用redis的lua脚本时会用到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install -y gcc<br><span class="hljs-meta prompt_"># </span><span class="language-bash">下载</span><br>wget http://www.cpan.org/src/5.0/perl-5.16.1.tar.gz<br><span class="hljs-meta prompt_"># </span><span class="language-bash">解压</span><br>tar -xzf perl-5.16.1.tar.gz<br>cd perl-5.16.1<br><span class="hljs-meta prompt_"># </span><span class="language-bash">配置</span><br>./Configure -des -Dprefix=/usr/local/perl<br><span class="hljs-meta prompt_"># </span><span class="language-bash">安装</span><br>make &amp;&amp; make test &amp;&amp; make install<br><span class="hljs-meta prompt_"># </span><span class="language-bash">校验</span><br>perl -v<br></code></pre></td></tr></table></figure><h2 id="6-安装tcl8-6-1"><a href="#6-安装tcl8-6-1" class="headerlink" title="6. 安装tcl8.6.1"></a>6. 安装tcl8.6.1</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf tcl8.6.1-src.tar.gz<br>cd tcl8.6.1/unix/<br>./configure<br>make &amp;&amp; make test &amp;&amp; make install<br></code></pre></td></tr></table></figure><h1 id="二-单机redis安装"><a href="#二-单机redis安装" class="headerlink" title="二 单机redis安装"></a>二 单机redis安装</h1><h2 id="1-安装redis"><a href="#1-安装redis" class="headerlink" title="1. 安装redis"></a>1. 安装redis</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -zxvf redis-3.2.8.tar.gz<br>cd redis-3.2.8/<br>make &amp;&amp; make install<br></code></pre></td></tr></table></figure><h2 id="2-安装redis服务"><a href="#2-安装redis服务" class="headerlink" title="2. 安装redis服务"></a>2. 安装redis服务</h2><p>使用redis提供的util来安装redis的后台服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd utils<br>./install_server.sh<br><span class="hljs-meta prompt_"># </span><span class="language-bash">然后一路回车，使用默认配置</span><br></code></pre></td></tr></table></figure><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/blog/install_server.png" alt="install_server"></p><h2 id="3-启动及查看redis服务"><a href="#3-启动及查看redis服务" class="headerlink" title="3. 启动及查看redis服务"></a>3. 启动及查看redis服务</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">启动redis服务</span><br>systemctl start redis_6379.service<br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看redis服务状态</span><br>systemctl status redis_6379.service<br></code></pre></td></tr></table></figure><p>将3台服务搭建好做好准备工作</p><h2 id="4-redis配置文件"><a href="#4-redis配置文件" class="headerlink" title="4. redis配置文件"></a>4. redis配置文件</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 绑定ip 可以远程访问<br>bind 127.0.0.1 192.168.56.101 <br><br># 指定端口号<br>port 6379<br><br># 后台运行<br>daemonize yes<br><br># 指定pid文件<br>pidfile /var/run/redis_6379.pid<br><br># 日志路径<br>logfile /var/log/redis_6379.log<br><br># 指定密码<br>requirepass redis<br><br># RDB 的存储策略<br>save 900 1<br>save 300 10<br>save 60 10000<br><br># 数据存储目录<br>dir /var/lib/redis/6379<br><br># aof文件存储<br>appendonly yes<br><br># aof文件存储文件<br>appendfilename &quot;appendonly.aof&quot;<br><br># aof存储策略<br>appendfsync everysec<br><br># aof文件重写策略<br>auto-aof-rewrite-percentage 100<br>auto-aof-rewrite-min-size 64mb<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>缓存</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Mybatis动态数据源</title>
    <link href="/2020/12/02/Mybatis%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90/"/>
    <url>/2020/12/02/Mybatis%E5%8A%A8%E6%80%81%E6%95%B0%E6%8D%AE%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="业务场景"><a href="#业务场景" class="headerlink" title="业务场景"></a>业务场景</h1><p>现有股票与基金业务，不同的业务分在不同的库中，但有些业务类似可以基于同一套代码，例如组织架构、权限控制与客户管理，但是为区分业务线，要将数据拆分在不同的数据库中</p><h1 id="达成效果"><a href="#达成效果" class="headerlink" title="达成效果"></a>达成效果</h1><p>不同的业务传对应的业务参数，保存到相应的库中</p><h2 id="基金业务"><a href="#基金业务" class="headerlink" title="基金业务"></a>基金业务</h2><h3 id="新增用户"><a href="#新增用户" class="headerlink" title="新增用户"></a>新增用户</h3><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202214530335.png" alt="image-20201202214530335"></p><h3 id="查询用户"><a href="#查询用户" class="headerlink" title="查询用户"></a>查询用户</h3><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202214834950.png" alt="image-20201202214834950"></p><h2 id="股票业务"><a href="#股票业务" class="headerlink" title="股票业务"></a>股票业务</h2><h3 id="新增用户-1"><a href="#新增用户-1" class="headerlink" title="新增用户"></a>新增用户</h3><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202214736326.png" alt="image-20201202214736326"></p><h3 id="查询用户-1"><a href="#查询用户-1" class="headerlink" title="查询用户"></a>查询用户</h3><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202215006443.png" alt="image-20201202215006443"></p><h1 id="具体实现"><a href="#具体实现" class="headerlink" title="具体实现"></a>具体实现</h1><h2 id="项目结构"><a href="#项目结构" class="headerlink" title="项目结构"></a>项目结构</h2><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202212630462.png" alt="image-20201202212630462"></p><h2 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h2><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/image-20201202213814882.png" alt="image-20201202213814882"></p><h2 id="表结构"><a href="#表结构" class="headerlink" title="表结构"></a>表结构</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> `rbac_user` (<br>  `id` <span class="hljs-type">int</span>(<span class="hljs-number">11</span>) <span class="hljs-keyword">NOT</span> <span class="hljs-keyword">NULL</span> AUTO_INCREMENT,<br>  `name` <span class="hljs-type">varchar</span>(<span class="hljs-number">64</span>) <span class="hljs-keyword">DEFAULT</span> <span class="hljs-keyword">NULL</span>,<br>  <span class="hljs-keyword">PRIMARY</span> KEY (`id`)<br>) ENGINE<span class="hljs-operator">=</span>InnoDB AUTO_INCREMENT<span class="hljs-operator">=</span><span class="hljs-number">1</span> <span class="hljs-keyword">DEFAULT</span> CHARSET<span class="hljs-operator">=</span>utf8mb4 <span class="hljs-keyword">COLLATE</span><span class="hljs-operator">=</span>utf8mb4_0900_ai_ci<br></code></pre></td></tr></table></figure><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><h3 id="1-POM依赖"><a href="#1-POM依赖" class="headerlink" title="1. POM依赖"></a>1. POM依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span>?&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">project</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0&quot;</span> <span class="hljs-attr">xmlns:xsi</span>=<span class="hljs-string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span><br><span class="hljs-tag"><span class="hljs-attr">xsi:schemaLocation</span>=<span class="hljs-string">&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">modelVersion</span>&gt;</span>4.0.0<span class="hljs-tag">&lt;/<span class="hljs-name">modelVersion</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">parent</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.4.0<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">relativePath</span>/&gt;</span> <span class="hljs-comment">&lt;!-- lookup parent from repository --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">parent</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>com.sure<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>learn-mybatis-dynamic-datasource<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">name</span>&gt;</span>learn-mybatis-dynamic-datasource<span class="hljs-tag">&lt;/<span class="hljs-name">name</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">description</span>&gt;</span>Demo project for Spring Boot<span class="hljs-tag">&lt;/<span class="hljs-name">description</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">properties</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">java.version</span>&gt;</span>1.8<span class="hljs-tag">&lt;/<span class="hljs-name">java.version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">properties</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependencies</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">version</span>&gt;</span>2.1.4<span class="hljs-tag">&lt;/<span class="hljs-name">version</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>mysql<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>mysql-connector-java<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>runtime<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.projectlombok<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>lombok<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">optional</span>&gt;</span>true<span class="hljs-tag">&lt;/<span class="hljs-name">optional</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-comment">&lt;!--AOP 依赖--&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-aop<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">dependency</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">scope</span>&gt;</span>test<span class="hljs-tag">&lt;/<span class="hljs-name">scope</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependency</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">dependencies</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">build</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">groupId</span>&gt;</span>org.springframework.boot<span class="hljs-tag">&lt;/<span class="hljs-name">groupId</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="hljs-tag">&lt;/<span class="hljs-name">artifactId</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugin</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">plugins</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">build</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">project</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="2-配置文件"><a href="#2-配置文件" class="headerlink" title="2. 配置文件"></a>2. 配置文件</h3><p>不同的业务线配置不同的数据库</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">fund:</span><br>      <span class="hljs-attr">driverClassName:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">jdbcUrl:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/fund?useUnicode=true&amp;characterEncoding=utf8</span><br>    <span class="hljs-attr">stock:</span><br>      <span class="hljs-attr">driverClassName:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br>      <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>      <span class="hljs-attr">jdbcUrl:</span> <span class="hljs-string">jdbc:mysql://localhost:3306/stock?useUnicode=true&amp;characterEncoding=utf8</span><br><br><span class="hljs-attr">logging:</span><br>  <span class="hljs-attr">level:</span><br>    <span class="hljs-attr">com.sure:</span> <span class="hljs-string">debug</span><br></code></pre></td></tr></table></figure><h3 id="3-创建业务平台枚举类型"><a href="#3-创建业务平台枚举类型" class="headerlink" title="3. 创建业务平台枚举类型"></a>3. 创建业务平台枚举类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 业务平台枚举</span><br><span class="hljs-comment"> *</span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> sure</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">PlatformEnum</span> &#123;<br><br>    FUND(<span class="hljs-string">&quot;fund&quot;</span>),<br>    STOCK(<span class="hljs-string">&quot;stock&quot;</span>);<br><br>    <span class="hljs-keyword">public</span> String value;<br><br>    PlatformEnum(String value)&#123;<br>        <span class="hljs-built_in">this</span>.value = value;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="4-动态数据源上下文管理"><a href="#4-动态数据源上下文管理" class="headerlink" title="4. 动态数据源上下文管理"></a>4. 动态数据源上下文管理</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 动态数据源上下文管理</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> sure </span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataSourceContextHolder</span> &#123;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">final</span> ThreadLocal&lt;String&gt; contextHolder = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ThreadLocal</span>&lt;&gt;();<br><br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 设置数据源</span><br><span class="hljs-comment">     * </span><br><span class="hljs-comment">     * <span class="hljs-doctag">@param</span> dataSourceKey</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setDataSource</span><span class="hljs-params">(String dataSourceKey)</span>&#123;<br>        contextHolder.set(dataSourceKey);<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 获取数据源</span><br><span class="hljs-comment">     * <span class="hljs-doctag">@return</span></span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> String <span class="hljs-title function_">getDataSource</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> contextHolder.get();<br>    &#125;<br>    <span class="hljs-comment">/**</span><br><span class="hljs-comment">     * 清空数据源设置</span><br><span class="hljs-comment">     */</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">clearDataSource</span><span class="hljs-params">()</span>&#123;<br>        contextHolder.remove();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="5-动态数据源"><a href="#5-动态数据源" class="headerlink" title="5.动态数据源"></a>5.动态数据源</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 动态数据源</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DynamicDataSource</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_">AbstractRoutingDataSource</span> &#123;<br>    <br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">protected</span> Object <span class="hljs-title function_">determineCurrentLookupKey</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> DataSourceContextHolder.getDataSource();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="6-Mybatis多数据源配置"><a href="#6-Mybatis多数据源配置" class="headerlink" title="6. Mybatis多数据源配置"></a>6. Mybatis多数据源配置</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * Mybatais 动态数据源配置</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> sure </span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Configuration</span><br><span class="hljs-meta">@MapperScan(basePackages = &quot;com.sure.learnmybatisdynamicdatasource.mapper&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MybaticDynamicDataSourceConfig</span> &#123;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-meta">@ConfigurationProperties(&quot;spring.datasource.fund&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">fundDataSource</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> DataSourceBuilder.create().build();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-meta">@ConfigurationProperties(&quot;spring.datasource.stock&quot;)</span><br>    <span class="hljs-keyword">public</span> DataSource <span class="hljs-title function_">stockDataSource</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> DataSourceBuilder.create().build();<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> DynamicDataSource <span class="hljs-title function_">dataSource</span><span class="hljs-params">(<span class="hljs-meta">@Qualifier(&quot;fundDataSource&quot;)</span> DataSource fundDataSource,</span><br><span class="hljs-params">                                        <span class="hljs-meta">@Qualifier(&quot;stockDataSource&quot;)</span> DataSource stockDataSource)</span>&#123;<br><br>        Map&lt;Object,Object&gt; dataSources = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br><br>        dataSources.put(PlatformEnum.FUND.value,fundDataSource);<br>        dataSources.put(PlatformEnum.STOCK.value,stockDataSource);<br><br>        <span class="hljs-type">DynamicDataSource</span> <span class="hljs-variable">dynamicDataSource</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DynamicDataSource</span>();<br><br>        dynamicDataSource.setTargetDataSources(dataSources);<br>        dynamicDataSource.setDefaultTargetDataSource(fundDataSource);<br><br>        <span class="hljs-keyword">return</span> dynamicDataSource;<br>    &#125;<br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> SqlSessionFactory <span class="hljs-title function_">sqlSessionFactory</span><span class="hljs-params">(DynamicDataSource dynamicDataSource)</span> <span class="hljs-keyword">throws</span> Exception &#123;<br>        <span class="hljs-type">SqlSessionFactoryBean</span> <span class="hljs-variable">sqlSessionFactoryBean</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SqlSessionFactoryBean</span>();<br><br>        sqlSessionFactoryBean.setDataSource(dynamicDataSource);<br><br>        <span class="hljs-comment">// 扫描mapper路径</span><br>        Resource[] resources = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PathMatchingResourcePatternResolver</span>().getResources(<span class="hljs-string">&quot;classpath:mapper/*.xml&quot;</span>);<br>        sqlSessionFactoryBean.setMapperLocations(resources);<br>        <span class="hljs-keyword">return</span> sqlSessionFactoryBean.getObject();<br>    &#125;<br><br><br>    <span class="hljs-meta">@Bean</span><br>    <span class="hljs-keyword">public</span> PlatformTransactionManager <span class="hljs-title function_">transactionManager</span><span class="hljs-params">(DynamicDataSource dynamicDataSource)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">DataSourceTransactionManager</span>(dynamicDataSource);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="7-动态数据源切面"><a href="#7-动态数据源切面" class="headerlink" title="7. 动态数据源切面"></a>7. 动态数据源切面</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 动态数据源切面</span><br><span class="hljs-comment"> * </span><br><span class="hljs-comment"> * <span class="hljs-doctag">@author</span> sure </span><br><span class="hljs-comment"> */</span><br><span class="hljs-meta">@Aspect</span><br><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataSourceAspect</span> &#123;<br><br>    <span class="hljs-meta">@Pointcut(&quot;execution(public * com.sure.learnmybatisdynamicdatasource.mapper..*.*(..))&quot;)</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">aop</span><span class="hljs-params">()</span>&#123;&#125;<br><br><br>    <span class="hljs-meta">@Around(&quot;aop()&quot;)</span><br>    <span class="hljs-keyword">public</span> Object <span class="hljs-title function_">around</span><span class="hljs-params">(ProceedingJoinPoint joinPoint)</span> <span class="hljs-keyword">throws</span> Throwable &#123;<br>        Object[] args = joinPoint.getArgs();<br>        <span class="hljs-keyword">if</span> (Objects.nonNull(args) &amp;&amp; args.length&gt;<span class="hljs-number">0</span>)&#123;<br>            DataSourceContextHolder.setDataSource(args[<span class="hljs-number">0</span>].toString());<br>        &#125;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-keyword">return</span> joinPoint.proceed();<br>        &#125;<span class="hljs-keyword">finally</span> &#123;<br>            DataSourceContextHolder.clearDataSource();<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="8-编写Mapper"><a href="#8-编写Mapper" class="headerlink" title="8. 编写Mapper"></a>8. 编写Mapper</h3><p>注意mapper中的第一个参数预留来指定数据源</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Mapper</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">RbacUserMapper</span> &#123;<br><br>    Integer <span class="hljs-title function_">save</span><span class="hljs-params">(String dataSource, <span class="hljs-meta">@Param(&quot;user&quot;)</span> RbacUserDO rbacUserDO)</span>;<br><br>    RbacUserDO <span class="hljs-title function_">get</span><span class="hljs-params">(String dataSource, <span class="hljs-meta">@Param(&quot;id&quot;)</span> Integer id)</span>;<br><br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.sure.learnmybatisdynamicdatasource.mapper.RbacUserMapper&quot;</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">insert</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;save&quot;</span> <span class="hljs-attr">keyProperty</span>=<span class="hljs-string">&quot;id&quot;</span>&gt;</span><br>        insert into rbac_user(name) values (#&#123;user.name&#125;)<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">insert</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;get&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.sure.learnmybatisdynamicdatasource.domain.RbacUserDO&quot;</span>&gt;</span><br>        select id,name from rbac_user where id = #&#123;id&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure><h3 id="9-编写service"><a href="#9-编写service" class="headerlink" title="9.编写service"></a>9.编写service</h3><p>同样注意方法参数中的数据源参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RbacUserService</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> RbacUserMapper rbacUserMapper;<br><br><br>    <span class="hljs-keyword">public</span> Integer <span class="hljs-title function_">save</span><span class="hljs-params">(String dataSource, RbacUserDO rbacUserDO)</span>&#123;<br>        <span class="hljs-keyword">return</span> rbacUserMapper.save(dataSource, rbacUserDO);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> RbacUserDO <span class="hljs-title function_">get</span><span class="hljs-params">(String dataSource, Integer id)</span>&#123;<br>        <span class="hljs-type">RbacUserDO</span> <span class="hljs-variable">rbacUserDO</span> <span class="hljs-operator">=</span> rbacUserMapper.get(dataSource, id);<br>        <span class="hljs-keyword">return</span> rbacUserDO;<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="10-编写Controller层"><a href="#10-编写Controller层" class="headerlink" title="10. 编写Controller层"></a>10. 编写Controller层</h3><p>通用返回参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Result</span>&lt;T&gt; <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br><br>    <span class="hljs-keyword">private</span> Integer code;<br><br>    <span class="hljs-keyword">private</span> String msg;<br><br>    <span class="hljs-keyword">private</span> T data;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Result</span><span class="hljs-params">(Integer code , String msg)</span>&#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.msg = msg;<br>    &#125;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Result</span><span class="hljs-params">(Integer code , String msg, T data)</span>&#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.msg = msg;<br>        <span class="hljs-built_in">this</span>.data = data;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  Result <span class="hljs-title function_">ok</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>(ResultEnum.SUCCESS.code,ResultEnum.SUCCESS.msg);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> &lt;T&gt; Result <span class="hljs-title function_">ok</span><span class="hljs-params">(T data)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>(ResultEnum.SUCCESS.code,ResultEnum.SUCCESS.msg,data);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  Result <span class="hljs-title function_">error</span><span class="hljs-params">()</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>(ResultEnum.ERROR.code,ResultEnum.ERROR.msg);<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span>  Result <span class="hljs-title function_">error</span><span class="hljs-params">(Integer code,String msg)</span>&#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Result</span>(code,msg);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><p>状态码枚举</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">enum</span> <span class="hljs-title class_">ResultEnum</span> &#123;<br>    SUCCESS(<span class="hljs-number">1</span>,<span class="hljs-string">&quot;success&quot;</span>),<br>    ERROR(-<span class="hljs-number">1</span>,<span class="hljs-string">&quot;system error&quot;</span>);<br><br>    <span class="hljs-keyword">public</span> Integer code;<br><br>    <span class="hljs-keyword">public</span> String msg;<br><br>    ResultEnum (Integer code,String msg)&#123;<br>        <span class="hljs-built_in">this</span>.code = code;<br>        <span class="hljs-built_in">this</span>.msg = msg;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>使用path参数来指定业务平台</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;api/1&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RbacUserController</span> &#123;<br><br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">public</span> RbacUserService rbacUserService;<br><br>    <span class="hljs-meta">@PostMapping(&quot;&#123;platform&#125;/user&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">addUser</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable</span> String platform, RbacUserDO rbacUserDO)</span>&#123;<br><br>        <span class="hljs-keyword">return</span> Result.ok(rbacUserService.save(platform, rbacUserDO));<br>    &#125;<br><br><br>    <span class="hljs-meta">@GetMapping(&quot;&#123;platform&#125;/user/&#123;id&#125;&quot;)</span><br>    <span class="hljs-keyword">public</span> Result <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-meta">@PathVariable(&quot;platform&quot;)</span> String platform,<span class="hljs-meta">@PathVariable(&quot;id&quot;)</span> Integer id)</span>&#123;<br>        <span class="hljs-type">RbacUserDO</span> <span class="hljs-variable">rbacUserDO</span> <span class="hljs-operator">=</span> rbacUserService.get(platform, id);<br>        <span class="hljs-keyword">return</span> Result.ok(rbacUserDO);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure><h1 id="踩到的坑"><a href="#踩到的坑" class="headerlink" title="踩到的坑"></a>踩到的坑</h1><p>注意切面类返回值！！！</p><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/20201202222202.png" alt="为啥返回null"></p>]]></content>
    
    
    <categories>
      
      <category>Mybatis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Mybatis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MongoDB 起步（一）</title>
    <link href="/2020/10/08/MongoDB-%E8%B5%B7%E6%AD%A5%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2020/10/08/MongoDB-%E8%B5%B7%E6%AD%A5%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="MongoDB-简介"><a href="#MongoDB-简介" class="headerlink" title="MongoDB 简介"></a>MongoDB 简介</h1><p>MongoDB 是由C++语言编写的，是一个基于分布式文件存储的开源数据库系统。</p><h1 id="MongoDB-安装"><a href="#MongoDB-安装" class="headerlink" title="MongoDB 安装"></a>MongoDB 安装</h1><ol><li><p>从<a href="https://www.mongodb.com/try/download/community">MongoDB</a>官网下载mongodb,解压到本地文件夹</p></li><li><p>创建目录 <code>data</code> 与<code>log</code></p></li><li><p>新增配置文件</p></li></ol><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs properties"><span class="hljs-comment"># 数据存放目录</span><br><span class="hljs-attr">dbpath</span>=<span class="hljs-string">/Users/sure/opt/mongodb-macos-x86_64-4.2.9/data</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 指定端口号</span><br><span class="hljs-comment"># port=27017</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 指定日志文件</span><br><span class="hljs-attr">logpath</span>=<span class="hljs-string">/Users/sure/opt/mongodb-macos-x86_64-4.2.9/log/master.log</span><br><span class="hljs-comment"># 写日志的模式：设置为true为追加，默认覆盖，如未指定启动时将覆盖原日志文件</span><br><span class="hljs-attr">logappend</span>=<span class="hljs-string">true</span><br><span class="hljs-comment"># 是否后台执行 默认为false</span><br><span class="hljs-attr">fork</span>=<span class="hljs-string">true</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 最大连接数</span><br><span class="hljs-attr">maxConns</span>=<span class="hljs-string">4000</span><br><span class="hljs-comment"></span><br><span class="hljs-comment"># 用户认证，默认false，不需要认证，进入数据库需要auth认证</span><br><span class="hljs-comment"># 当数据库没有用户，则不需要验证也可以，创建用户之后都要验证</span><br><span class="hljs-comment"># auth = true</span><br></code></pre></td></tr></table></figure><ol start="4"><li><p>启动MongoDB,在安装目录下执行 <code>./bin/mongod -f mongo.conf</code></p></li><li><p>连接测试<code>mongo --host 127.0.0.1 --port 27017</code></p></li></ol><h1 id="数据库操作"><a href="#数据库操作" class="headerlink" title="数据库操作"></a>数据库操作</h1><ol><li><p><code>show dbs</code>查看数据库或者使用<code>show databases</code></p></li><li><p><code>use dbname</code> : 如果数据库不存在则创建数据库，否则切换到数据库</p><p>要求：</p><ul><li><p>不能是空字符串</p></li><li><p>不能含有特殊字符空格，点，$ </p></li><li><p>应该全部小写</p></li><li><p>不超过64字节</p></li></ul><p>默认给我们提供的数据库：</p><ul><li>admin: </li><li>local: 该数据库中的数据不会被复制，集群时不会相互复制</li><li>config：用于分片设置时，用于保存分片的相关信息</li></ul></li><li><p><code>db</code> 查看当前的数据库</p></li><li><p><code>db.dropDataBase</code> 删除数据库</p></li></ol><img src=" https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/mongodb_1/截屏2020-10-09 下午2.19.13.png" alt="数据库操作" style="zoom:50%;" /><h1 id="集合操作"><a href="#集合操作" class="headerlink" title="集合操作"></a>集合操作</h1><ol><li>显示创建集合 <code>db.createCollection(&#39;name&#39;)</code></li><li>删除集合<code>db.name.drop()</code></li><li>查看集合<code>show collections</code></li></ol><h1 id="文档CRUD操作"><a href="#文档CRUD操作" class="headerlink" title="文档CRUD操作"></a>文档CRUD操作</h1><ol><li><p>文档插入<code>insert()</code>与<code>save()</code>都可以,这样可以隐式的创建集合class</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">class</span>.<span class="hljs-title function_">insert</span>(&#123;<span class="hljs-string">&quot;classid&quot;</span>:<span class="hljs-string">&quot;001&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;语文&quot;</span>,<span class="hljs-string">&quot;teacher&quot;</span>:<span class="hljs-string">&quot;0001&quot;</span>&#125;)<br></code></pre></td></tr></table></figure></li><li><p>插入多条<code>insertMany()</code>，使用数组插入,批量插入出错时,可以使用trycatch</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">insertMany</span>([<br>  &#123;<span class="hljs-string">&quot;teacherid&quot;</span>:<span class="hljs-string">&quot;001&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;zhangsan&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">23</span>&#125;,<br>  &#123;<span class="hljs-string">&quot;teacherid&quot;</span>:<span class="hljs-string">&quot;002&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;lisi&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">24</span>&#125;,<br>])<br></code></pre></td></tr></table></figure></li><li><p>文档查询<code>find()</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 查询全部</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>();<br><span class="hljs-comment">// 条件查询</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;lisi&quot;</span>&#125;)<br><span class="hljs-comment">// 投影查询   查询指定的列后一个参数指定列 1 代表查询  _id 可以通过指定0来排除</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;lisi&quot;</span>&#125;,&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">name</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">_id</span>:<span class="hljs-number">0</span>&#125;);<br></code></pre></td></tr></table></figure></li><li><p>使用try catch  貌似没什么用，需要再查查</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">try</span>&#123;<br>  db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">insertMany</span>([<br>    &#123;<span class="hljs-string">&quot;teacherid&quot;</span>:<span class="hljs-string">&quot;003&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;wangwu&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">23</span>&#125;,<br>    &#123;<span class="hljs-string">&quot;teacherid&quot;</span>:<span class="hljs-string">&quot;004&quot;</span>,<span class="hljs-string">&quot;name&quot;</span>:<span class="hljs-string">&quot;zhaoliu&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>,<span class="hljs-number">24</span>&#125;,<br>  ])<br>&#125;<span class="hljs-keyword">catch</span>(e)&#123;<br>  <span class="hljs-title function_">print</span>(<span class="hljs-string">&quot;err:&quot;</span>+e);<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>更新操作</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 语法 db.teacher.update(query,updatedata,option)</span><br><span class="hljs-comment">// 1. 覆盖修改 直接将对象更新为 第二个参数</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">update</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;zhangsan&quot;</span>&#125;,&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">26</span>&#125;)<br><br><span class="hljs-comment">// 2. 局部修改 使用$set</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">update</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;zhangsan&quot;</span>&#125;,&#123;<span class="hljs-attr">$set</span>:&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">26</span>&#125;&#125;);<br><br><span class="hljs-comment">// 3. 批量修改  mongodb 默认只修改匹配的第一条数据  要想修改多条就要使用参数了 option</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">update</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;lisi&quot;</span>&#125;,&#123;<span class="hljs-attr">$set</span>:&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">28</span>&#125;&#125;,&#123;<span class="hljs-attr">multi</span>:<span class="hljs-literal">true</span>&#125;)<br><br><span class="hljs-comment">// 4. 列值增长 年龄增长一岁</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">update</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;zhangsan&quot;</span>&#125;,&#123;<span class="hljs-attr">$inc</span>:&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">1</span>&#125;&#125;)<br><br></code></pre></td></tr></table></figure></li><li><p>删除文档</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">//语法 db.teacher.remove(条件)</span><br><span class="hljs-comment">// 1.全部删除  谨慎使用 </span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">remove</span>(&#123;&#125;)<br><br><span class="hljs-comment">// 2.条件删除  </span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">remove</span>(&#123;<span class="hljs-attr">teacherid</span>:<span class="hljs-string">&quot;003&quot;</span>&#125;)<br></code></pre></td></tr></table></figure></li></ol><h1 id="分页查询"><a href="#分页查询" class="headerlink" title="分页查询"></a>分页查询</h1><h2 id="1-统计查询"><a href="#1-统计查询" class="headerlink" title="1. 统计查询"></a>1. 统计查询</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 语法 db.teacher.count(query,options)</span><br><br><span class="hljs-comment">// 1. 查询全部</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">count</span>()；<br><br><span class="hljs-comment">// 2. 条件查询</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">count</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;zhangsan&quot;</span>&#125;);<br><br></code></pre></td></tr></table></figure><h2 id="2-分页查询"><a href="#2-分页查询" class="headerlink" title="2. 分页查询"></a>2. 分页查询</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">/* </span><br><span class="hljs-comment">* db.teacher.find().limit().skip()</span><br><span class="hljs-comment">* limit()读取指定数量的数据 默认20</span><br><span class="hljs-comment">* skip() 跳过指定数量的数据</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-comment">// 查询前两条</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">24</span>&#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">2</span>)<br><br><span class="hljs-comment">// 查询第二页</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">24</span>&#125;).<span class="hljs-title function_">limit</span>(<span class="hljs-number">2</span>).<span class="hljs-title function_">skip</span>(<span class="hljs-number">2</span>)<br></code></pre></td></tr></table></figure><h2 id="3-排序查询"><a href="#3-排序查询" class="headerlink" title="3. 排序查询"></a>3. 排序查询</h2><p>使用sort()对数据进行排序，sort()中指定排序的字段，用1表示升序 -1表示降序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>().<span class="hljs-title function_">sort</span>(&#123;<span class="hljs-attr">age</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">name</span>:-<span class="hljs-number">1</span>&#125;)<br></code></pre></td></tr></table></figure><h1 id="复杂查询"><a href="#复杂查询" class="headerlink" title="复杂查询"></a>复杂查询</h1><h2 id="1-正则查询"><a href="#1-正则查询" class="headerlink" title="1. 正则查询"></a>1. 正则查询</h2><p>Mongodb 支持js中的正则查询</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-regexp">/zh/</span>&#125;)<br><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-regexp">/^zh/</span>&#125;)<br></code></pre></td></tr></table></figure><h2 id="2-比较查询"><a href="#2-比较查询" class="headerlink" title="2. 比较查询"></a>2. 比较查询</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 大于  &gt;</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$gt</span>:<span class="hljs-number">23</span>&#125;&#125;)<br><span class="hljs-comment">// 大于等于 &gt;=</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$gte</span>:<span class="hljs-number">23</span>&#125;&#125;)<br><span class="hljs-comment">// 小于 &lt;</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$lt</span>:<span class="hljs-number">23</span>&#125;&#125;)<br><span class="hljs-comment">// 小于等于 &lt;=</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$lte</span>:<span class="hljs-number">23</span>&#125;&#125;)<br><span class="hljs-comment">// 不等于 !=</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$ne</span>:<span class="hljs-number">23</span>&#125;&#125;)<br></code></pre></td></tr></table></figure><h2 id="3-包含查询"><a href="#3-包含查询" class="headerlink" title="3. 包含查询"></a>3. 包含查询</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 类比mysql in</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$in</span>:[<span class="hljs-number">23</span>]&#125;&#125;)<br><br><span class="hljs-comment">//not in</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$nin</span>:[<span class="hljs-number">23</span>]&#125;&#125;)<br></code></pre></td></tr></table></figure><h2 id="4-条件连接查询"><a href="#4-条件连接查询" class="headerlink" title="4. 条件连接查询"></a>4. 条件连接查询</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// and 查询 &#123;$and:[&#123;&#125;,&#123;&#125;,&#123;&#125;]</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">$and</span>:[&#123;<span class="hljs-attr">_id</span>:&#123;<span class="hljs-attr">$gt</span>:<span class="hljs-number">3</span>&#125;&#125;,&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$gt</span>:<span class="hljs-number">24</span>&#125;&#125;]&#125;)<span class="hljs-comment">//id&gt;3 并且 age&gt;24</span><br><br><span class="hljs-comment">// or 查询 &#123;$or:[&#123;&#125;,&#123;&#125;,&#123;&#125;]</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">find</span>(&#123;<span class="hljs-attr">$or</span>:[&#123;<span class="hljs-attr">_id</span>:&#123;<span class="hljs-attr">$gt</span>:<span class="hljs-number">3</span>&#125;&#125;,&#123;<span class="hljs-attr">age</span>:&#123;<span class="hljs-attr">$gt</span>:<span class="hljs-number">24</span>&#125;&#125;]&#125;)<br><br></code></pre></td></tr></table></figure><h1 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h1><p>如果没有索引，MongoDB在执行查询的时候必须执行全集合扫描，即扫描集合中的每个文档，以选择与查询语句匹配的文档。MongoDB的索引采用B树的数据结构</p><h2 id="1-索引的类型"><a href="#1-索引的类型" class="headerlink" title="1. 索引的类型"></a>1. 索引的类型</h2><ul><li><p>单字段索引</p><p>在单个字段上按照升序或降序创建索引</p></li><li><p>复合索引</p><p>在多个字段上创建索引，并且可以指定某个字段升序或降序</p></li><li><p>其他索引</p><p>地理空间索引、文本索引、哈希索引</p></li></ul><h2 id="2-索引操作"><a href="#2-索引操作" class="headerlink" title="2. 索引操作"></a>2. 索引操作</h2><h3 id="1-查看索引"><a href="#1-查看索引" class="headerlink" title="1.查看索引"></a>1.查看索引</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 获取索引 以数据形式返回</span><br>db.<span class="hljs-property">teacher</span>.<span class="hljs-title function_">getIndex</span>();<br><span class="hljs-comment">// 返回结果</span><br>[<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,  <span class="hljs-comment">// 索引版本</span><br><span class="hljs-string">&quot;key&quot;</span> : &#123; <span class="hljs-comment">// 索引的字段</span><br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-number">1</span>  <span class="hljs-comment">// 以 _id 为索引 按升序排序</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_id_&quot;</span>, <span class="hljs-comment">// 索引名字</span><br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.teacher&quot;</span> <span class="hljs-comment">//命名空间</span><br>&#125;<br>]<br></code></pre></td></tr></table></figure><h3 id="2-创建索引"><a href="#2-创建索引" class="headerlink" title="2.创建索引"></a>2.创建索引</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// db.teacher.createIndex(keys,options);</span><br><br><span class="hljs-comment">// 创建单字段索引</span><br>db.<span class="hljs-property">class</span>.<span class="hljs-title function_">createIndex</span>(&#123;<span class="hljs-attr">classid</span>:<span class="hljs-number">1</span>&#125;)<br><span class="hljs-comment">//获取索引</span><br>[<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;key&quot;</span> : &#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-number">1</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_id_&quot;</span>,<br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.class&quot;</span><br>&#125;,<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;key&quot;</span> : &#123;<br><span class="hljs-string">&quot;classid&quot;</span> : <span class="hljs-number">1</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;classid_1&quot;</span>,<span class="hljs-comment">//默认索引名称加排序方式</span><br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.class&quot;</span><br>&#125;<br>]<br><br><span class="hljs-comment">// 创建复合索引</span><br>db.<span class="hljs-property">class</span>.<span class="hljs-title function_">createIndex</span>(&#123;<span class="hljs-attr">classid</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">name</span>:-<span class="hljs-number">1</span>&#125;,&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&quot;class_name_index&quot;</span>&#125;)<br><span class="hljs-comment">//获取索引</span><br>[<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;key&quot;</span> : &#123;<br><span class="hljs-string">&quot;_id&quot;</span> : <span class="hljs-number">1</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;_id_&quot;</span>,<br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.class&quot;</span><br>&#125;,<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;key&quot;</span> : &#123;<br><span class="hljs-string">&quot;classid&quot;</span> : <span class="hljs-number">1</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;classid_1&quot;</span>,<br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.class&quot;</span><br>&#125;,<br>&#123;<br><span class="hljs-string">&quot;v&quot;</span> : <span class="hljs-number">2</span>,<br><span class="hljs-string">&quot;key&quot;</span> : &#123;<br><span class="hljs-string">&quot;classid&quot;</span> : <span class="hljs-number">1</span>,<br><span class="hljs-string">&quot;name&quot;</span> : -<span class="hljs-number">1</span><br>&#125;,<br><span class="hljs-string">&quot;name&quot;</span> : <span class="hljs-string">&quot;class_name_index&quot;</span>,<span class="hljs-comment">//指定的索引名称</span><br><span class="hljs-string">&quot;ns&quot;</span> : <span class="hljs-string">&quot;articledb.class&quot;</span><br>&#125;<br>]<br><br></code></pre></td></tr></table></figure><h3 id="3-删除索引"><a href="#3-删除索引" class="headerlink" title="3. 删除索引"></a>3. 删除索引</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 语法 db.class.dropIndex(name); 可以根据名称去删  也可以根据具体的索引字段去删除</span><br><br>db.<span class="hljs-property">class</span>.<span class="hljs-title function_">dropIndex</span>(&#123;<span class="hljs-attr">classid</span>:<span class="hljs-number">1</span>&#125;);<br><br>db.<span class="hljs-property">class</span>.<span class="hljs-title function_">dropIndex</span>(<span class="hljs-string">&quot;class_name_index&quot;</span>);<br><br><br><span class="hljs-comment">// 删除所有索引</span><br>db.<span class="hljs-property">class</span>.<span class="hljs-title function_">dropIndexes</span>();<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>数据库</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MongoDB</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Vagrant虚拟机管理</title>
    <link href="/2020/10/02/Vagrant%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AE%A1%E7%90%86/"/>
    <url>/2020/10/02/Vagrant%E8%99%9A%E6%8B%9F%E6%9C%BA%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="什么是Vagrant"><a href="#什么是Vagrant" class="headerlink" title="什么是Vagrant"></a>什么是Vagrant</h1><p><strong>Vagrant</strong>是用来帮助我们创建一个虚拟环境的（感觉有点像docker），它是建立在VMware、VirtualBox等虚拟化工具之上的一个工具，用于将我们从不断安装虚拟机系统中解放出来。它在底层还是利用了虚拟化工具提供的命令行工具，</p><p>在使用该工具之前我们如果要安装一个虚拟机，可能要如下步骤：</p><ol><li>下载镜像</li><li>在VirtualBox中安装，配置硬件信息</li><li>进行相关的配置</li></ol><p>使用Vagrant我们只需要如下步骤：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">vagrant init centos/7<br>vagrant up<br></code></pre></td></tr></table></figure><h1 id="通过-Vagrant-创建一个虚拟机"><a href="#通过-Vagrant-创建一个虚拟机" class="headerlink" title="通过 Vagrant 创建一个虚拟机"></a>通过 Vagrant 创建一个虚拟机</h1><h3 id="1-安装Vagrant"><a href="#1-安装Vagrant" class="headerlink" title="1. 安装Vagrant"></a>1. 安装Vagrant</h3><p>因为Vagrant需要依赖虚拟化工具，所以我们需要先安装<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a>,然后安装<a href="https://www.vagrantup.com/downloads.html">Vagrant</a>。安装都很简单，直接下一步就可以。</p><p>安装完成在命令行中执行<code>vagrant -v</code>测试是否安装成功。</p><h3 id="2-安装一个虚拟机"><a href="#2-安装一个虚拟机" class="headerlink" title="2. 安装一个虚拟机"></a>2. 安装一个虚拟机</h3><p>注意：执行init的目录要和up的目录为同一目录。</p><p><code>vagrant init centos/7</code> 的目的是创建<strong>Vagrantfile</strong>， 该文件是虚拟机的配置文件</p><p><code>vagrant up</code> 根据当前目录下的vagrantfile启动一个虚拟机</p><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/install.png" alt="install"></p><h3 id="3-进入虚拟机"><a href="#3-进入虚拟机" class="headerlink" title="3. 进入虚拟机"></a>3. 进入虚拟机</h3><p>通过运行<code>vagrant ssh</code>可以进入虚拟机，默认的登录用户为vagrant，其实在上图的启动日志中我们也可以看到Vagrant帮我们创建了一个用户vagrant，并且生成了ssh的秘钥。</p><p>root的密码为vagrant</p><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/ssh.png" alt="ssh"></p><p>这时候我们打开VirtualBox,也可以看到我们当前启动的虚拟机。</p><p><img src="https://yeziup-blog.oss-cn-shanghai.aliyuncs.com/img/virtualbox.png" alt="virtualbox"></p><h3 id="4-停止虚拟机"><a href="#4-停止虚拟机" class="headerlink" title="4. 停止虚拟机"></a>4. 停止虚拟机</h3><p>可以直接在VirtualBox中停止，也可以执行命令<code>vagrant halt</code>。</p><h1 id="Vagrantfile"><a href="#Vagrantfile" class="headerlink" title="Vagrantfile"></a>Vagrantfile</h1><h3 id="1-Vagrantfile配置"><a href="#1-Vagrantfile配置" class="headerlink" title="1. Vagrantfile配置"></a>1. Vagrantfile配置</h3><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><code class="hljs ruby"><span class="hljs-comment"># -*- mode: ruby -*-</span><br><span class="hljs-comment"># vi: set ft=ruby :</span><br><br><span class="hljs-comment"># All Vagrant configuration is done below. The &quot;2&quot; in Vagrant.configure</span><br><span class="hljs-comment"># configures the configuration version (we support older styles for</span><br><span class="hljs-comment"># backwards compatibility). Please don&#x27;t change it unless you know what</span><br><span class="hljs-comment"># you&#x27;re doing.</span><br>Vagrant.configure(<span class="hljs-string">&quot;2&quot;</span>) <span class="hljs-keyword">do</span> |<span class="hljs-params">config</span>|<br>  <span class="hljs-comment"># The most common configuration options are documented and commented below.</span><br>  <span class="hljs-comment"># For a complete reference, please see the online documentation at</span><br>  <span class="hljs-comment"># https://docs.vagrantup.com.</span><br><br>  <span class="hljs-comment"># Every Vagrant development environment requires a box. You can search for</span><br>  <span class="hljs-comment"># boxes at https://vagrantcloud.com/search.</span><br>  <span class="hljs-comment"># 指定用的box</span><br>  config.vm.box = <span class="hljs-string">&quot;centos/7&quot;</span><br><br>  <span class="hljs-comment"># Disable automatic box update checking. If you disable this, then</span><br>  <span class="hljs-comment"># boxes will only be checked for updates when the user runs</span><br>  <span class="hljs-comment"># `vagrant box outdated`. This is not recommended.</span><br>  <span class="hljs-comment"># config.vm.box_check_update = false</span><br><br>  <span class="hljs-comment"># Create a forwarded port mapping which allows access to a specific port</span><br>  <span class="hljs-comment"># within the machine from a port on the host machine. In the example below,</span><br>  <span class="hljs-comment"># accessing &quot;localhost:8080&quot; will access port 80 on the guest machine.</span><br>  <span class="hljs-comment"># <span class="hljs-doctag">NOTE:</span> This will enable public access to the opened port</span><br>  <span class="hljs-comment"># 设置端口转发</span><br>  <span class="hljs-comment"># config.vm.network &quot;forwarded_port&quot;, guest: 80, host: 8080</span><br><br>  <span class="hljs-comment"># Create a forwarded port mapping which allows access to a specific port</span><br>  <span class="hljs-comment"># within the machine from a port on the host machine and only allow access</span><br>  <span class="hljs-comment"># via 127.0.0.1 to disable public access</span><br>  <span class="hljs-comment"># config.vm.network &quot;forwarded_port&quot;, guest: 80, host: 8080, host_ip: &quot;127.0.0.1&quot;</span><br><br>  <span class="hljs-comment"># Create a private network, which allows host-only access to the machine</span><br>  <span class="hljs-comment"># using a specific IP.</span><br>  <span class="hljs-comment"># 配置网络环境</span><br>  <span class="hljs-comment"># config.vm.network &quot;private_network&quot;, ip: &quot;192.168.33.10&quot;</span><br>  config.vm.network <span class="hljs-string">&quot;private_network&quot;</span>, <span class="hljs-symbol">ip:</span> <span class="hljs-string">&quot;192.168.56.2&quot;</span><br><br>  <span class="hljs-comment"># Create a public network, which generally matched to bridged network.</span><br>  <span class="hljs-comment"># Bridged networks make the machine appear as another physical device on</span><br>  <span class="hljs-comment"># your network.</span><br>  <span class="hljs-comment"># 桥接方式</span><br>  <span class="hljs-comment"># config.vm.network &quot;public_network&quot;</span><br><br>  <span class="hljs-comment"># Share an additional folder to the guest VM. The first argument is</span><br>  <span class="hljs-comment"># the path on the host to the actual folder. The second argument is</span><br>  <span class="hljs-comment"># the path on the guest to mount the folder. And the optional third</span><br>  <span class="hljs-comment"># argument is a set of non-required options.</span><br>  <span class="hljs-comment"># 设置共享目录 默认是用virtual box，只在启动时挂载</span><br>  <span class="hljs-comment"># config.vm.synced_folder &quot;../data&quot;, &quot;/vagrant_data&quot;</span><br>  <span class="hljs-comment"># 使用 nfs 这样可以实时同步 type:&quot;nfs&quot;</span><br>  <span class="hljs-comment"># config.vm.synced_folder &quot;.&quot;, &quot;/vagrant&quot;,type:&quot;nfs&quot;</span><br><br>  <span class="hljs-comment"># Provider-specific configuration so you can fine-tune various</span><br>  <span class="hljs-comment"># backing providers for Vagrant. These expose provider-specific options.</span><br>  <span class="hljs-comment"># Example for VirtualBox:</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># config.vm.provider &quot;virtualbox&quot; do |vb|</span><br>  <span class="hljs-comment">#   # Display the VirtualBox GUI when booting the machine</span><br>  <span class="hljs-comment">#   vb.gui = true</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment">#   # Customize the amount of memory on the VM:</span><br>  <span class="hljs-comment">#   vb.memory = &quot;1024&quot;</span><br>  <span class="hljs-comment"># end</span><br>  <span class="hljs-comment">#</span><br>  <span class="hljs-comment"># View the documentation for the provider you are using for more</span><br>  <span class="hljs-comment"># information on available options.</span><br><br>  config.vm.provider <span class="hljs-string">&quot;virtualbox&quot;</span> <span class="hljs-keyword">do</span> |<span class="hljs-params">vb</span>|<br>    <span class="hljs-comment"># Display the VirtualBox GUI when booting the machine</span><br>    <span class="hljs-comment"># vb.gui = true</span><br>    <br>    <span class="hljs-comment"># 设置虚拟机名称 也可指定其他信息 例如下边的指定内存</span><br>    vb.name = <span class="hljs-string">&quot;centos7&quot;</span><br>    <span class="hljs-comment"># Customize the amount of memory on the VM:</span><br>    <span class="hljs-comment"># vb.memory = &quot;1024&quot;</span><br>  <span class="hljs-keyword">end</span><br><br>  <span class="hljs-comment"># Enable provisioning with a shell script. Additional provisioners such as</span><br>  <span class="hljs-comment"># Ansible, Chef, Docker, Puppet and Salt are also available. Please see the</span><br>  <span class="hljs-comment"># documentation for more information about their specific syntax and use.</span><br>  <span class="hljs-comment"># config.vm.provision &quot;shell&quot;, inline: &lt;&lt;-SHELL</span><br>  <span class="hljs-comment">#   apt-get update</span><br>  <span class="hljs-comment">#   apt-get install -y apache2</span><br>  <span class="hljs-comment"># SHELL</span><br><span class="hljs-keyword">end</span><br><br></code></pre></td></tr></table></figure><h3 id="2-重启虚拟机"><a href="#2-重启虚拟机" class="headerlink" title="2. 重启虚拟机"></a>2. 重启虚拟机</h3><p>执行 <code>vagrant reload</code>,注意要在执行<code>vagrant init</code>的目录中执行</p>]]></content>
    
    
    <categories>
      
      <category>Virtual</category>
      
    </categories>
    
    
    <tags>
      
      <tag>虚拟机</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
